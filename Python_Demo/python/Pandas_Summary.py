#########################################
#               package                 #
#########################################

import pandas as pd
import numpy as np

pd.set_option("display.max_rows", 999)
pd.set_option("max_colwidth", 100)
pd.set_option('display.max_columns', 500)

##################################################
#                    Index                       #
##################################################

##  34 資料檢視  ##

##################################################
#               Create DataFrame                 #
##################################################

df = pd.DataFrame(
                  {
                   "id":[1001,1002,1003,1004,1005],
                   "date":pd.date_range('20210901', periods=5),
                   "city":['Taipei', 'TaiChungCity', ' Hualien ', 'taipei' ,  'TAINAN'],
                   "age":[23,44,54,32,34],
                   "category":['100-A','100-B','110-C','100-A','210-A'],
                   "salary":[32000,np.nan,29330,54330,np.nan]
                   },
                 columns =['id','date','city','category','age','salary']
                 )

##################################################
#                    資料檢視                     #
##################################################

#######################
#      資料维度查看    #
#######################

print(df.shape) ## (row,column) ##

#######################
#      資料基本訊息    #
#######################
print(df.info())

#######################
#     資料data type    #
#######################
print(df.dtypes)


#######################
#      資料空值項      #
#######################
df.isnull()

#######################
#   查看某一列的唯一值  #
#######################
df['category'].unique()

#######################
#      查看df的值      #
#######################
df.values

#################################
#      查看df col 的資料分布     #
################################
df['salary'].describe()

#######################
#      查看列名稱      #
#######################
df.columns

###########################
#      查看前後2行數據     #
###########################
df.head(2)
df.tail(2)


##################################################
#                    資料清洗                     #
##################################################

###########################
#         填補空值         #
###########################
df['salary'].fillna(value=0)

####################################
#         使用平均值填補空值         #
####################################
df['salary'].fillna(df['salary'].mean())

####################################
#            去除字串空格           #
####################################
df['city']=df['city'].map(str.strip)

####################################
#            大小寫轉換             #
####################################
df['city'].str.upper()
df['city'].str.lower()

####################################
#            更換資料格式           #
####################################
df['salary'].fillna(value=0).astype('int')

####################################
#            更換欄位名稱           #
####################################
df.rename(columns={'salary': 'salary(NTD)'})

####################################
#            剔除重複值             #
####################################
df.drop_duplicates(subset='category',keep = 'last').reset_index(drop = True)

####################################
#             資料取代             #
####################################

df['city'].replace('TAINAN', '台南')


##################################################
#                    資料預處理                   #
##################################################

df_merge = pd.DataFrame({
                         "id":[1001,1002,1003,1004,1005,1006,1007,1008],
                         "gender":['male','female','male','female','male','female','male','female'],
                         "pay":['Y','N','Y','Y','N','Y','N','Y',]
                       })

#######################################
#              資料表合併              #
#######################################

df_inner=pd.merge(df,df_merge,how='inner',on = 'id')  # 交集
df_left=pd.merge(df,df_merge,how='left',on = 'id')        #左集合
df_right=pd.merge(df,df_merge,how='right',on = 'id')      #右集合
df_outer=pd.merge(df,df_merge,how='outer',on = 'id')  #聯集

#######################################
#              資料表排序              #
#######################################

df_inner.sort_values(by=['age'])

#######################################
#              照索引排序              #
#######################################
df_inner.sort_index()

#######################################
#          給定條件，新增欄位           #
#######################################

df_inner['Group'] = np.where(df_inner['salary'] > 40000,'high','low')

#######################################
#          給定條件，分組標記           #
#######################################
df_inner.loc[(df_inner['city'].str.lower() == 'taipei') & (df_inner['salary'] >= 35000), 'sign']=1

##################################################
#                     資料提取                    #
##################################################

df_inner.loc[3]
df_inner.iloc[0:2]
df_inner.iloc[:3,:2]
#######################################
#               重設索引               #
#######################################

df_inner.reset_index()

#######################################
#          判斷city 為 Taipei          #
#######################################
df_inner.loc[(df_inner['city'].str.lower().isin(['taipei','tainan']) == True)]


#######################################
#               Groupby               #
#######################################

df_inner.groupby('gender')['id'].count()
df_inner.groupby(['gender','Group'])['id'].count()

df_inner.groupby('gender')['salary'].agg([len,np.mean,np.std]).reset_index()




##################################################
#                   資料匯入輸出                   #
##################################################
# file_path = r'D:\..\..\file.csv'
# df_inner.read_csv( fr'{file_path}',low_memory = False)


df_inner.to_excel('excel_to_python.xlsx', sheet_name='lab_1')
df_inner.to_csv('excel_to_python.csv',index = False, encoding = 'utf-8-sig')